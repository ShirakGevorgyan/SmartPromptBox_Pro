# name: CD (self-hosted auto)

# on:
#   push:
#     branches: [ main ]

# jobs:
#   up:
#     name: Up via Docker Compose (self-host)
#     runs-on: [self-hosted, linux, x64]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: "Preflight: show env"
#         run: |
#           whoami
#           pwd
#           uname -a
#           groups
#           docker version || true
#           docker compose version || docker-compose --version || true

#       - name: Write .env if missing (printf, no heredoc)
#         run: |
#           if [ ! -f .env ]; then
#             : > .env
#             printf "OPENAI_API_KEY=%s\n" "${{ secrets.OPENAI_API_KEY }}" >> .env
#             printf "TELEGRAM_BOT_TOKEN=%s\n" "${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
#             printf "GENIUS_ACCESS_TOKEN=%s\n" "${{ secrets.GENIUS_ACCESS_TOKEN }}" >> .env
#             printf "TELEGRAM_CHAT_ID=%s\n" "${{ secrets.TELEGRAM_CHAT_ID }}" >> .env
#             printf "DATABASE_URL=%s\n" "${{ secrets.DATABASE_URL }}" >> .env
#             sed -E 's/(=).+/\1*****/' .env
#           fi

#       - name: Compose up (prod)
#         run: |
#           # choose docker compose v2 or legacy docker-compose
#           if docker compose version >/dev/null 2>&1; then
#             DC="docker compose"
#           elif command -v docker-compose >/dev/null 2>&1; then
#             DC="docker-compose"
#           else
#             echo "Docker Compose not installed. Install docker-compose-plugin or docker-compose"; exit 1
#           fi

#           $DC -f devops/compose/docker-compose.prod.yml up -d --build

#       - name: Show containers
#         run: docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
