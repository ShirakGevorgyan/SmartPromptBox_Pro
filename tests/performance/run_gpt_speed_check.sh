#!/bin/bash

LOG_FILE="tests/performance/slow_gpt_log.txt"
TEST_FILE="tests/performance/test_gpt_response_time.py"
TRIM_SCRIPT="tests/performance/trim_log_file.sh"


if [ -f "$TRIM_SCRIPT" ]; then
    bash "$TRIM_SCRIPT"
else
    echo "‚ö†Ô∏è trim_log_file.sh ÷Ü’°’µ’¨’® ’¢’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’ß÷â"
fi

echo ""
echo "üöÄ ’é’°’¶’•÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ GPT performance ’©’•’Ω’ø’® 10 ’°’∂’£’°’¥..."
for i in {1..10}
do
    echo "üëâ ‘π’•’Ω’ø $i/10"
    PYTHONPATH=. pytest "$TEST_FILE" > /dev/null
    sleep 1
done

echo ""
echo "üìä ’é’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’¥ ’•’∂÷Ñ ’æ’•÷Ä’ª’´’∂ 10 ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®..."

if [ ! -f "$LOG_FILE" ]; then
    echo "‚ùå ‘º’∏’£ ÷Ü’°’µ’¨’® ’π’´ ’£’ø’∂’æ’•’¨÷â"
    exit 1
fi

durations=$(tail -n 10 "$LOG_FILE" | awk -F '|' '{gsub(/ sec/, "", $3); print $3}' | tr -d ' ')

count=0
sum=0

while read -r value; do
    if [[ $value =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
        sum=$(echo "$sum + $value" | bc)
        count=$((count + 1))
    fi
done <<< "$durations"

if [ "$count" -lt 5 ]; then
    echo "‚ö†Ô∏è ’â’Ø’° ’¢’°’æ’°÷Ä’°÷Ä ’ø’æ’µ’°’¨ ’¥’´’ª’´’∂’® ’∞’°’∑’æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä÷â"
    exit 1
fi

avg=$(echo "scale=3; $sum / $count" | bc)
echo ""
echo "üìà ’Ñ’´’ª’´’∂ ’∫’°’ø’°’Ω’≠’°’∂ ’™’°’¥’°’∂’°’Ø’®’ù $avg ’æ’°’µ÷Ä’Ø’µ’°’∂"

if (( $(echo "$avg < 7.0" | bc -l) )); then
    echo "‚úÖ GPT performance ’©’•’Ω’ø’® ’∞’°’¥’°÷Ä’æ’∏÷Ç’¥ ’ß **’°’∂÷Å’°’Æ** ‚úÖ"
    exit 0
else
    echo "‚ùå GPT performance ’©’•’Ω’ø’® **’π’°’∂÷Å’°’æ**÷â ’ä’°’ø’°’Ω’≠’°’∂’∂’•÷Ä’® ’π’°÷É’°’¶’°’∂÷Å ’§’°’∂’§’°’≤ ’•’∂÷â"
    exit 1
fi
