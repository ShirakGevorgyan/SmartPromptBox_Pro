import re


def extract_plot_only(text: str) -> str:
    """
    ’é’•÷Ä’∞’°’∂’∏÷Ç’¥ ’ß ’¥’´’°’µ’∂ üìú ’ç’µ’∏÷Ç’™’• ’∞’°’ø’æ’°’Æ’® ’°’¥’¢’∏’≤’ª’°’Ø’°’∂ ’ø’•÷Ñ’Ω’ø’´÷Å÷â
    """
    match = re.search(
        r"üìú ’ç’µ’∏÷Ç’™’•’ù(.*?)(?:\n[^\n]*?(?:üé≠|üé¨|üé•|üìä|‚ñ∂Ô∏è|üéûÔ∏è|üí∏|üí∞|ü§î|üì¢|$))",
        text,
        re.DOTALL,
    )
    return match.group(1).strip() if match else ""


MAX_PLOT_LENGTH = 800


def clean_garbage_from_plot(text: str) -> str:
    """
    ’Ä’°’∂’∏÷Ç’¥ ’ß ’°’∂’Ø’°’∫ ’ø’•÷Ñ’Ω’ø’®’ù ’∏’π ’∞’°’µ’•÷Ä’•’∂ ’Ω’´’¥’æ’∏’¨’∂’•÷Ä, ’Ø’∏’§’°’µ’´’∂ ’∞’°’ø’æ’°’Æ’∂’•÷Ä ÷á ’ø’•’≠’∂’´’Ø’°’Ø’°’∂ ’°÷Ä’ø’°’∞’°’µ’ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
    """
    text = re.sub(
        r"[^\u0531-\u0587\u0561-\u0587\u0531-\u0556\u0561-\u0587÷â,÷â‚Ä¶()\sA-Za-z0-9-]",
        " ",
        text,
    )

    text = re.sub(r"\s{2,}", " ", text).strip()

    return text


def refine_plot_description(raw_text: str, client) -> str:
    """
    ’é’•÷Ä’°’±÷á’°’Ø’•÷Ä’∫’∏÷Ç’¥ ’ß ’Ω’µ’∏÷Ç’™’•’∂ ’∫’°÷Ä’¶ ’∏÷Ç ’£’•’≤’•÷Å’´’Ø ’∞’°’µ’•÷Ä’•’∂’∏’æ÷â
    """
    raw_text = raw_text.strip()

    cleaned_input = clean_garbage_from_plot(raw_text)

    if len(cleaned_input) > MAX_PLOT_LENGTH:
        cleaned_input = cleaned_input[:MAX_PLOT_LENGTH].rsplit(".", 1)[0] + "÷â"

    prompt = f"""
‘¥’∏÷Ç ’Ω’µ’∏÷Ç’™’•’∂’•÷Ä’´ ’≠’¥’¢’°’£’´÷Ä ’•’Ω÷â

’î’•’¶ ’Ø’ø÷Ä’æ’•’¨’∏÷Ç ’ß ÷Ü’´’¨’¥’´ ’Ø’°’¥ ’Ω’•÷Ä’´’°’¨’´ ’Ω’µ’∏÷Ç’™’•’∂÷â ’î’∏ ’≠’∂’§’´÷Ä’∂ ’ß’ù

- ‘≥÷Ä’´÷Ä ’°’µ’∂ ’£÷Ä’°’£’•’ø, ’∫’°÷Ä’¶ ÷á ’®’∂’©’•’º’∂’•’¨’´ ’¨’•’¶’æ’∏’æ
- ’Ä’•’º’°÷Å÷Ä’∏÷Ç ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’Ø’°’¥ ’π’∞’°’¥’°’Ø÷Å’æ’°’Æ ’∂’°’≠’°’§’°’Ω’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’®
- ’Ñ’´ ÷É’∏’≠’´÷Ä ’´’¥’°’Ω’ø’®, ’¥’´’°’µ’∂ ’¢’°÷Ä’•’¨’°’æ’´÷Ä ’±÷á’°’Ø’•÷Ä’∫’∏÷Ç’¥’®

’ç’µ’∏÷Ç’™’•’∂’ù
\"\"\"{cleaned_input}\"\"\"

‘≥÷Ä’´÷Ä ’¥’´’°’µ’∂ ’¢’°÷Ä’•’¨’°’æ’æ’°’Æ ’ø’°÷Ä’¢’•÷Ä’°’Ø’®’ù ’°’º’°’∂÷Å ’¢’°÷Å’°’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’Ø’°’¥ ’∂’∑’∏÷Ç’¥’∂’•÷Ä ’°’æ’•’¨’°÷Å’∂’•’¨’∏÷Ç÷â
"""
    response = client.chat.completions.create(
        model="gpt-4o", messages=[{"role": "user", "content": prompt}], temperature=0.5
    )
    return response.choices[0].message.content.strip()


def replace_plot_with_refined(full_text: str, client) -> str:
    """
    ’ì’∏’≠’°÷Ä’´’∂’∏÷Ç’¥ ’ß üìú ’ç’µ’∏÷Ç’™’• ’∞’°’ø’æ’°’Æ’®’ù ’¢’°÷Ä’•’¨’°’æ’æ’°’Æ ’ø’°÷Ä’¢’•÷Ä’°’Ø’∏’æ, ’°’¥’¢’∏’≤’ª’°’Ø’°’∂ ’∫’°’ø’°’Ω’≠’°’∂’∏÷Ç’¥÷â
    """
    original_plot = extract_plot_only(full_text)
    if not original_plot:
        return full_text

    cleaned_plot = refine_plot_description(original_plot, client)
    return full_text.replace(original_plot, cleaned_plot, 1)
