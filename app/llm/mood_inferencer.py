from openai import OpenAI
import os
from dotenv import load_dotenv

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def generate_songs_for_mood(mood: str) -> str:
    system_prompt = (
        "‘¥’∏÷Ç ’•÷Ä’°’™’∑’ø’°’Ø’°’∂ ÷Ö’£’∂’°’Ø’°’∂ ’•’Ω÷â "
        "’ï’£’ø’°’ø’•÷Ä’® ’∂’∑’•’¨ ’ß ’´÷Ä ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®’ù '{}'. "
        "‘±’º’°’ª’°÷Ä’Ø’´÷Ä 5 ’•÷Ä’£, ’∏÷Ä’∏’∂÷Ñ ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’∏÷Ç’¥ ’•’∂ ’°’µ’§ ’¶’£’°÷Å’∏’≤’∏÷Ç’©’µ’°’∂’®÷â"
    ).format(mood)

    return ask_gpt(system_prompt, mood)


# ‚úÖ 5 ’ñ’´’¨’¥ ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’°’∂’® ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂
def generate_movies_for_mood(mood: str) -> str:
    system_prompt = (
        "‘¥’∏÷Ç ’Ø’´’∂’∏’µ’´ ÷É’∏÷Ä’±’°’£’•’ø ’•’Ω÷â "
        "’ï’£’ø’°’ø’•÷Ä’® ’´÷Ä’•’∂ ’¶’£’∏÷Ç’¥ ’ß’ù '{}'. "
        "‘±’º’°’ª’°÷Ä’Ø’´÷Ä 5 ÷Ü’´’¨’¥, ’∏÷Ä’∏’∂÷Ñ ’Ø’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’•’∂ ’°’µ’§ ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’°’∂’®÷â"
    ).format(mood)

    return ask_gpt(system_prompt, mood)


# ‚úÖ 5 ’¥’•’ª’¢’•÷Ä’∏÷Ç’¥ ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’°’∂’® ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂
def generate_quotes_for_mood(mood: str) -> str:
    system_prompt = (
        "’ï’£’ø’°’ø’•÷Ä’® ’´÷Ä’•’∂ ’¶’£’∏÷Ç’¥ ’ß’ù '{}'. "
        "‘±’º’°’ª’°÷Ä’Ø’´÷Ä 5 ’∂’•÷Ä’∑’∂’π’∏’≤ ’Ø’°’¥ ’´’¥’°’Ω’ø’°’¨’´÷Å ’¥’•’ª’¢’•÷Ä’∏÷Ç’¥’∂’•÷Ä, ’∏÷Ä’∏’∂÷Ñ ’Ø÷Ö’£’∂’•’∂ ’∂÷Ä’°’∂ ’°’µ’§ ’¶’£’°÷Å’∏’≤’∏÷Ç’©’µ’°’∂ ’§’•’∫÷Ñ’∏÷Ç’¥÷â"
    ).format(mood)

    return ask_gpt(system_prompt, mood)


# ‚úÖ 2 ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’ù text-to-image-’´ ’∞’°’¥’°÷Ä
def generate_image_prompts_for_mood(mood: str) -> str:
    system_prompt = (
        "‘¥’∏÷Ç ’°÷Ä’æ’•’Ω’ø’´ ÷Ö’£’∂’°’Ø’°’∂ ’•’Ω, ’∏’æ ’Ω’ø’•’≤’Æ’∏÷Ç’¥ ’ß ’∂’Ø’°÷Ä’∂’•÷Ä’´ ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä (prompt): "
        "’ï’£’ø’°’ø’•÷Ä’® ’∞’°’µ’ø’∂’•’¨ ’ß ’´÷Ä ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®’ù '{}'. "
        "‘±’º’°’ª’°÷Ä’Ø’´÷Ä 2 ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂, ’∏÷Ä’∏’∂÷Ñ ’∞’∂’°÷Ä’°’æ’∏÷Ä ’Ø’¨’´’∂’´ ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ DALL¬∑E ’Ø’°’¥ Stable Diffusion-’´ ’¥’´’ª’∏÷Å’∏’æ ’∂’Ø’°÷Ä ’Ω’ø’•’≤’Æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä÷â"
    ).format(mood)

    return ask_gpt(system_prompt, mood)


# üß† ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä GPT ’∞’°÷Ä÷Å’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
def ask_gpt(system_prompt: str, mood: str) -> str:
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": f"‘µ’Ω ’∞’´’¥’° ’¶’£’∏÷Ç’¥ ’•’¥’ù {mood}"}
            ],
            temperature=0.9
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"‚ùå GPT ’Ω’≠’°’¨’ù {e}"