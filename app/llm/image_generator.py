import os
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))


# üîÆ ’ñ’∏÷Ç’∂’Ø÷Å’´’°’ù ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’∞’´’¥’°’∂ ’æ÷Ä’° ’Ω’ø’°’∂’°’¨ ’∫’°÷Ä’¶ ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä (prompts)
def generate_image_prompts_from_mood(mood: str) -> list[str]:
    system_prompt = (
        f"’ï’£’ø’°’ø’•÷Ä’® ’¶’£’∏÷Ç’¥ ’ß '{mood}' ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂÷â "
        f"‘±’º’°’ª’°÷Ä’Ø’´÷Ä 2 ’∂’Ø’°÷Ä’∂’•÷Ä’´ ’∫’°÷Ä’¶ ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’ù ’∏÷Ä’∏’∂÷Ñ ’∞’∂’°÷Ä’°’æ’∏÷Ä ’ß ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ text-to-image ’¥’∏’§’•’¨’∂’•÷Ä’∏’æ, "
        f"÷Ö÷Ä’´’∂’°’Ø’ù DALL¬∑E ’Ø’°’¥ Stable Diffusion÷â ’ä’°’∞’∫’°’∂’´÷Ä ’∫’°÷Ä’¶, ’∞’Ω’ø’°’Ø ’∏÷Ç ’∂’Ø’°÷Ä’°’£÷Ä’°’Ø’°’∂ ’∏’≥, ’°’º’°’∂÷Å ’æ’•÷Ä’∂’°’£÷Ä’•÷Ä’´÷â"
    )

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": f"‘µ’Ω ’∞’´’¥’° ’¶’£’∏÷Ç’¥ ’•’¥’ù {mood}"}
            ],
            temperature=0.8
        )
        content = response.choices[0].message.content.strip()

        # ’è’∏’≤ ’°’º ’ø’∏’≤ ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ’ù ’∞’•’º’°÷Å’∂’•’¨’∏’æ ’©’´’æ, ’æ’•÷Ä’∂’°’£’´÷Ä, ’Ø’•’ø ÷á ’°’µ’¨’∂
        lines = []
        for line in content.split("\n"):
            line = line.strip("‚Ä¢- ")
            if not line:
                continue
            # ‘µ’©’• ’Ø’° `:` ’¢’°’™’°’∂’∏÷Ç’¥, ’æ’•÷Ä÷Å’∂’•’∂÷Ñ ’¥’´’°’µ’∂ ’∂’Ø’°÷Ä’°’£÷Ä’°’Ø’°’∂ ’¥’°’Ω’®
            if ":" in line:
                parts = line.split(":", 1)
                line = parts[1].strip()
            lines.append(line)

        return lines[:2]

    except Exception as e:
        return [f"‚ùå ’ç’≠’°’¨’ù {str(e)}"]


# üñº ’ñ’∏÷Ç’∂’Ø÷Å’´’°’ù ’£’•’∂’•÷Ä’°÷Å’∂’•’¨ ’∂’Ø’°÷Ä’∂’•÷Ä’® ’®’Ω’ø prompt-’•÷Ä’´
def generate_images_from_prompts(prompts: list[str]) -> list[tuple[str, str]]:
    results = []
    for prompt in prompts:
        try:
            image_resp = client.images.generate(
                model="dall-e-3",
                prompt=prompt,
                n=1,
                size="1024x1024"
            )
            image_url = image_resp.data[0].url
            results.append((prompt.strip(), image_url))
        except Exception as e:
            results.append((prompt.strip(), f"‚ùå ’ç’≠’°’¨’ù {str(e)}"))
    return results
